cmake_minimum_required(VERSION 3.0) #Проверка версии CMake.
set(PROJECT_NAME MyLabs) #Создаем обычную локальную переменную с именем проекта
project(${PROJECT_NAME}) # Название проекта

set(TMatrix TMatrix)
set(TMatrixlib TMatrixlib)
set(TMatrixtest TMatrixtest)

set(TStack TStack)
set(TStacklib TStacklib)
set(TStacktest TStacktest)

set(TQueue TQueue)
set(TQueuelib TQueuelib)
set(TQueuetest TQueuetest)

set(Postfix Postfix)
set(Postfixlib Postfixlib)
set(Postfixtest Postfixtest)


set(TPolinom TPolinom)
set(TPolinomlib TPolinomlib)
set(TPolinomtest TPolinomtest)

set(CMAKE_CONFIGURATION_TYPES "Debug;Release" CACHE STRING "Configs" FORCE) #Создается переменная CMAKE_CONFIGURATION_TYPES со значением "Debug;Release" и меткой/разделом Configs, переменная сохраниется в специальном файле доступном из всех файлов,
if(NOT CMAKE_BUILD_TYPE) # проверка имеющихся у компилятора вариантов сборки
    set(CMAKE_BUILD_TYPE Release) #Если нет то устанавливаем Release
endif()

include_directories(${CMAKE_CURRENT_SOURCE_DIR}/gtest)
add_subdirectory(gtest)

include_directories(${CMAKE_CURRENT_SOURCE_DIR}/TMatrixlib)
add_subdirectory(TMatrix)
add_subdirectory(TMatrixlib)
add_subdirectory(TMatrixtest)

include_directories(${CMAKE_CURRENT_SOURCE_DIR}/TStacklib)
add_subdirectory(TStack)
add_subdirectory(TStacklib)
add_subdirectory(TStacktest)

include_directories(${CMAKE_CURRENT_SOURCE_DIR}/TQueuelib)
add_subdirectory(TQueue)
add_subdirectory(TQueuelib)
add_subdirectory(TQueuetest)

include_directories(${CMAKE_CURRENT_SOURCE_DIR}/Postfixlib)
add_subdirectory(Postfix)
add_subdirectory(Postfixlib)
add_subdirectory(Postfixtest)

include_directories(${CMAKE_CURRENT_SOURCE_DIR}/TPolinomlib)
add_subdirectory(TPolinom)
add_subdirectory(TPolinomlib)
add_subdirectory(TPolinomtest)

#file(GLOB hdrs "*.h*") #Добавляем в переменную hdrs все файлы с расширением .h
#file(GLOB srcs "*.cpp") #Добавляем в переменную srcs все файлы с расширением .cpp
#include_directories(lib1)
#add_executable(${{PROJECT_NAME}} ${{srcs}} ${{hdrs}}) #Создаем проект с именем из переменной ${{PROJECT_NAME}}, в него добавляются файлы из переменных ${{srcs}} и ${{hdrs}}
#Собираем проект в поддиректории lib1
#target_link_libraries(${{PROJECT_NAME}} ${{MyLib1}}) #Подключаем к проекту с именем ${{PROJECT_NAME}} библиотеку с именем ${{MyLib1}}